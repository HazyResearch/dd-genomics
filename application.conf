deepdive {

  db.default {
    driver   : "org.postgresql.Driver"
    url      : "jdbc:postgresql://"${PGHOST}":"${PGPORT}"/"${DBNAME}
    user     : ${PGUSER}
    password : ${PGPASSWORD}
    dbname   : ${DBNAME}
    host     : ${PGHOST}
    port     : ${PGPORT}
  }

  # Specify a holdout fraction
  calibration.holdout_fraction: 0.00


  # Put your extractors here
  extraction.extractors {

	# Process parser output files into TSV file
	#process_parser: {
	#	style: cmd_extractor
	#	cmd: ${APP_HOME}/code/run_parser2sentences.sh ${APP_HOME} ${APP_HOME}/data/sentences.tsv
	#}

	# Create database schema
	#create_schema: {
	#	style: cmd_extractor
	#	cmd: ${APP_HOME}/code/create_schema.sh ${APP_HOME} ${DBNAME}
	#}

	# Load the 'sentences' table
	#load_sentences: {
	#	style: cmd_extractor
	#	cmd: ${APP_HOME}/code/copy_table_from_file.sh ${DBNAME} sentences ${APP_HOME}/data/sentences.tsv.partial
	#	dependencies: [create_schema, process_parser]
	#}

	# Extract gene mentions at the local level
	genes_mentions_local: {
		style: json_extractor
		input: "SELECT * FROM sentences;"
		output_relation: genes_mentions
		udf: ${APP_HOME}/code/genes_mentions_local.py ${APP_HOME}
		dependencies: [load_sentences]
	}

	# Extract HPO terms mentions at the local level
	hpoterms_mentions_local: {
		style: json_extractor
		input: "SELECT * FROM sentences;"
		output_relation: hpoterms_mentions
		udf: ${APP_HOME}/code/hpoterms_mentions_local.py ${APP_HOME}
		dependencies: [load_sentences]
	}

	# Extract gene <-> HPO terms relations 
	gene_hpoterms_relations: {
		style: json_extractor
		input: """SELECT 
					genes.provenance as gene_provenance,
					hpoterms.provenance as hpoterm_provenance,
					gene.name as gene_name,
					hpoterm.name as hpoterm_name,
					sentences.words as words,
				FROM genes_mentions genes, hpoterms_mentions hpoterms, sentences
				WHERE genes.provenance[1] = hpoterms.provenance[1] 
				AND genes.provenance[1] = sentences.docid 
				AND genes.provenance[2] = hpoterms.provenance[2] 
				AND genes.provenance[2] = sentences.sentid
				"""
		output_relation: gene_hpoterm_relations
		udf: ${APP_HOME}/code/gene_hpoterm_relations.py ${APP_HOME}
		dependencies: [ genes_mentions_local, hpoterms_mentions_local ]
	}

  }

  #pipeline.run: debug
  pipeline.pipelines {
	debug: [ gene_mentions_local]
  }

  # Put your variables here
  schema.variables {

  }

  # Put your inference rules here
  inference.factors {

  }

}
